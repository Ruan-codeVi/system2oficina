{"ast":null,"code":"var _jsxFileName = \"/home/juan/Documentos/Front-End_Projetos-React.js/oficina/src/contexts/auth.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, createContext } from 'react';\nimport firebase from '../services/firebaseConnection'; // Criando um contexto para espalha informações para outros components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction AuthProvider({\n  children\n}) {\n  _s();\n\n  const [user, setUser] = useState(null); // começa pq não existe usuario\n\n  const [loadingAuth, setAuthLoading] = useState(false); // loading do login\n  // const [loading, setLoading] = useState(true) //loading geral, quando abre a aplicação\n  //Montando a aplicação com usuario do local storage caso haja um\n\n  useEffect(() => {\n    const storageUser = localStorage.getItem();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      logado: !!user,\n      user\n    },\n    children: [\" \", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"O17SwhIBSrDCJY9UjjKLDrIRPIk=\");\n\n_c = AuthProvider;\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/juan/Documentos/Front-End_Projetos-React.js/oficina/src/contexts/auth.js"],"names":["useState","useEffect","createContext","firebase","AuthContext","AuthProvider","children","user","setUser","loadingAuth","setAuthLoading","storageUser","localStorage","getItem","logado"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,gCAArB,C,CAEA;;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASG,YAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAsC;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC,CADkC,CACK;;AACvC,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAE,KAAF,CAA9C,CAFkC,CAEsB;AACxD;AAEA;;AACAC,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMU,WAAW,GAAGC,YAAY,CAACC,OAAb,EAApB;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,CAAC,CAACP,IAAX;AAAiBA,MAAAA;AAAjB,KAA7B;AAAA,oBACKD,QADL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAfQD,Y;;KAAAA,Y;AAiBT,eAAeA,YAAf","sourcesContent":["import { useState, useEffect, createContext } from 'react'\nimport firebase from '../services/firebaseConnection'\n\n// Criando um contexto para espalha informações para outros components\n\nexport const AuthContext = createContext({})\n\nfunction AuthProvider( { children } ) {\n    const [user, setUser] = useState(null) // começa pq não existe usuario\n    const [loadingAuth, setAuthLoading] = useState( false ) // loading do login\n    // const [loading, setLoading] = useState(true) //loading geral, quando abre a aplicação\n    \n    //Montando a aplicação com usuario do local storage caso haja um\n    useEffect( () => {\n        const storageUser = localStorage.getItem()\n    },[])\n\n    return (\n        <AuthContext.Provider value={{logado: !!user, user}}> {/* !! esta convertendo o que estiver dentro do estado user em booleano*/}\n            {children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}