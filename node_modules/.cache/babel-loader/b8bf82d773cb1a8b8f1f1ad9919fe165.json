{"ast":null,"code":"var _jsxFileName = \"/home/juan/Documentos/Front-End_Projetos-React.js/oficina/src/routes/Route.js\",\n    _s = $RefreshSig$();\n\n// Componente de Rotas \nimport { useContext } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { AuthContext } from '../contexts/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RouterWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  _s();\n\n  const {\n    signed,\n    loading\n  } = useContext(AuthContext); // Se estiver logado\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  } // Se não estiver logado e tentar acessar rota privada, redireciona para login\n\n\n  if (!signed && isPrivate) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  } //Se estiver logado e for rota privada, redireciona para dashboard\n\n\n  if (signed && !isPrivate) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RouterWrapper, \"1PeECMyUjQn03P6gN5pdEK9WEWE=\");\n\n_c = RouterWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouterWrapper\");","map":{"version":3,"sources":["/home/juan/Documentos/Front-End_Projetos-React.js/oficina/src/routes/Route.js"],"names":["useContext","Redirect","Route","AuthContext","RouterWrapper","component","Component","isPrivate","rest","signed","loading","props"],"mappings":";;;AAAA;AACA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAIA,eAAe,SAASC,aAAT,CAAuB;AAClCC,EAAAA,SAAS,EAAEC,SADuB;AAElCC,EAAAA,SAFkC;AAGlC,KAAGC;AAH+B,CAAvB,EAIX;AAAA;;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBV,UAAU,CAAEG,WAAF,CAArC,CADA,CAKA;;AACA,MAAKO,OAAL,EAAe;AACX,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAZD,CAaJ;;;AACI,MAAK,CAACD,MAAD,IAAWF,SAAhB,EAA4B;AACxB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAhBD,CAiBJ;;;AACI,MAAKE,MAAM,IAAI,CAACF,SAAhB,EAA4B;AACxB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,KAAD,OACQC,IADR;AAEI,IAAA,MAAM,EAAEG,KAAK,iBACT,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAlCuBP,a;;KAAAA,a","sourcesContent":["// Componente de Rotas \nimport {useContext} from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport { AuthContext } from '../contexts/auth'\n\n\n\nexport default function RouterWrapper({ \n    component: Component,\n    isPrivate,\n    ...rest\n} ) {\n    const { signed, loading} = useContext( AuthContext )\n    \n    \n\n    // Se estiver logado\n    if ( loading ) {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n// Se não estiver logado e tentar acessar rota privada, redireciona para login\n    if ( !signed && isPrivate ) {\n        return <Redirect to='/'/>\n    }\n//Se estiver logado e for rota privada, redireciona para dashboard\n    if ( signed && !isPrivate ) {\n        return <Redirect to='/dashboard'/>\n    }\n\n    return (\n        <Route\n            {...rest}\n            render={props => (\n                <Component {...props}/>\n            )}\n        />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}