{"ast":null,"code":"import _regeneratorRuntime from\"/home/juan/\\xC1rea de Trabalho/oficina/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/juan/\\xC1rea de Trabalho/oficina/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/juan/\\xC1rea de Trabalho/oficina/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect,createContext}from'react';import firebase from'../services/firebaseConnection';import{toast}from'react-toastify';// Criando um contexto para espalha informações para outros components\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";export var AuthContext=/*#__PURE__*/createContext({});function AuthProvider(_ref){var children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];// começa pq não existe usuario\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loadingAuth=_useState4[0],setAuthLoading=_useState4[1];// loading do login\nvar _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];//loading geral, quando abre a aplicação\n//Montando a aplicação com usuario do local storage caso haja um\nuseEffect(function(){// Procura no local Storage\nfunction loadingStorage(){var storageUser=localStorage.getItem('Sistema_User');// vendo se há alguns usuario no localStorage\nif(storageUser){setUser(JSON.parse(storageUser));// se tiver algo, mandar para o estado setUser\nsetLoading(false);}setLoading(false);}loadingStorage();},[]);// cadastrando novo usuario no Firebase\nfunction casdastrarFireBase(_x,_x2,_x3){return _casdastrarFireBase.apply(this,arguments);}// Salvar no localStorage esse usuario novo\nfunction _casdastrarFireBase(){_casdastrarFireBase=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email,password,nome){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setAuthLoading(true);// mudou pra true, pq tem alguem querendo cadastrar\n_context2.next=3;return firebase.auth().createUserWithEmailAndPassword(email,password).then(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(value){var uid;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// caso de sucesso, recebe value com informações do usuario cadastrado\n// transformando a função em assincrona para poder relacionar com o banco de dados do firebase\nuid=value.user.uid;// Indo no banco cadastrar\n_context.next=3;return firebase.firestore().collection('users').doc(uid)// falando criar um doc com a variavel que recebe o uid\n.set({// o que vai ser enviado para a coleção\nnome:nome,avatarUrl:null})/*Depois de cadastrar usuario, cadastrou no banco esse usuario,\n             agora é disponibilizar esse dados para estado de user    \n            */.then(function(){var data={uid:uid,nome:nome,email:value.user.email,avatarUrl:null};// Passando para estado user atraves de setUser\nsetUser(data);saveStorageUser(data);setAuthLoading(false);// cadastro finalizado\ntoast.success('Cadastrado com sucesso!');});case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x6){return _ref2.apply(this,arguments);};}()).catch(function(erro){console.log(erro);toast.error('Erro ao cadastrar, Tente mais tarde');setAuthLoading(false);});case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _casdastrarFireBase.apply(this,arguments);}function saveStorageUser(data){localStorage.setItem('Sistema_User',JSON.stringify(data));}// Login de usuario\nfunction logar(_x4,_x5){return _logar.apply(this,arguments);}// Deslogando do sistema\nfunction _logar(){_logar=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(email,password){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:setAuthLoading(true);// Indo no firebase buscar email e senha\n_context4.next=3;return firebase.auth().signInWithEmailAndPassword(email,password).then(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(value){var uid,userProflie,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:// recebendo a response da promisse, pegando uid\nuid=value.user.uid;_context3.next=3;return firebase.firestore().collection('users').doc(uid).get();case 3:userProflie=_context3.sent;// utilizando valor da reposta do firebase armazenando em userProfile\ndata={uid:uid,nome:userProflie.data().nome,avatarUrl:userProflie.data().avatarUrl,email:value.user.email};// Passando para estado user atraves de setUser\nsetUser(data);saveStorageUser(data);setAuthLoading(false);// cadastro finalizado\ntoast.success('Bem vindo ao sistema');case 9:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x7){return _ref3.apply(this,arguments);};}()).catch(function(erro){console.log(erro);toast.error('Ops!, algo errado');setAuthLoading(false);});case 3:case\"end\":return _context4.stop();}}},_callee4);}));return _logar.apply(this,arguments);}function deslogarFirebase(){return _deslogarFirebase.apply(this,arguments);}function _deslogarFirebase(){_deslogarFirebase=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return firebase.auth().signOut();case 2:localStorage.removeItem('Sistema_User');setUser(null);case 4:case\"end\":return _context5.stop();}}},_callee5);}));return _deslogarFirebase.apply(this,arguments);}return/*#__PURE__*/_jsxs(AuthContext.Provider,{value:{logado:!!user,user:user,loading:loading,casdastrarFireBase:casdastrarFireBase,deslogarFirebase:deslogarFirebase,logar:logar,loadingAuth:loadingAuth,setUser:setUser,saveStorageUser:saveStorageUser},children:[\"                         \",children]});}export default AuthProvider;","map":{"version":3,"sources":["/home/juan/Área de Trabalho/oficina/src/contexts/auth.js"],"names":["useState","useEffect","createContext","firebase","toast","AuthContext","AuthProvider","children","user","setUser","loadingAuth","setAuthLoading","loading","setLoading","loadingStorage","storageUser","localStorage","getItem","JSON","parse","casdastrarFireBase","email","password","nome","auth","createUserWithEmailAndPassword","then","value","uid","firestore","collection","doc","set","avatarUrl","data","saveStorageUser","success","catch","erro","console","log","error","setItem","stringify","logar","signInWithEmailAndPassword","get","userProflie","deslogarFirebase","signOut","removeItem","logado"],"mappings":"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","sourcesContent":["import { useState, useEffect, createContext } from 'react'\nimport firebase from '../services/firebaseConnection'\nimport {toast} from 'react-toastify'\n\n// Criando um contexto para espalha informações para outros components\n\nexport const AuthContext = createContext({})\n\nfunction AuthProvider( { children } ) {\n    const [user, setUser] = useState(null) // começa pq não existe usuario\n    const [loadingAuth, setAuthLoading] = useState( false ) // loading do login\n    const [loading, setLoading] = useState(true) //loading geral, quando abre a aplicação\n    \n    //Montando a aplicação com usuario do local storage caso haja um\n    useEffect( () => {\n        // Procura no local Storage\n        function loadingStorage() {\n            const storageUser = localStorage.getItem( 'Sistema_User' ) \n        \n            // vendo se há alguns usuario no localStorage\n            if ( storageUser ) {\n                setUser( JSON.parse( storageUser ) ) // se tiver algo, mandar para o estado setUser\n                setLoading(false)\n            }\n            setLoading(false)\n        }\n\n       loadingStorage()\n\n    }, [] )\n    \n    // cadastrando novo usuario no Firebase\n    async function casdastrarFireBase(email, password, nome) {\n        setAuthLoading( true ) // mudou pra true, pq tem alguem querendo cadastrar\n        \n        await firebase.auth().createUserWithEmailAndPassword( email, password)\n        .then(async ( value ) => { // caso de sucesso, recebe value com informações do usuario cadastrado\n           // transformando a função em assincrona para poder relacionar com o banco de dados do firebase\n            let uid = value.user.uid\n\n            // Indo no banco cadastrar\n            await firebase.firestore().collection( 'users' )\n            .doc( uid ) // falando criar um doc com a variavel que recebe o uid\n            .set( { // o que vai ser enviado para a coleção\n                nome: nome,\n                avatarUrl: null\n            } )\n            /*Depois de cadastrar usuario, cadastrou no banco esse usuario,\n             agora é disponibilizar esse dados para estado de user    \n            */\n            .then( () => {\n                let data = {\n                    uid: uid,\n                    nome: nome,\n                    email: value.user.email,\n                    avatarUrl: null   \n                }\n                 // Passando para estado user atraves de setUser\n                setUser( data )\n                saveStorageUser( data )\n                setAuthLoading( false ) // cadastro finalizado\n                toast.success('Cadastrado com sucesso!')\n            } )\n\n        } )\n            .catch( erro => {\n                console.log( erro )\n                toast.error('Erro ao cadastrar, Tente mais tarde')\n                setAuthLoading( false )\n                \n            } )\n    }\n\n    // Salvar no localStorage esse usuario novo\n    function saveStorageUser( data ) {\n        localStorage.setItem('Sistema_User', JSON.stringify(data))\n    }\n\n    // Login de usuario\n    async function logar(email, password) {\n        setAuthLoading( true )\n        \n        // Indo no firebase buscar email e senha\n        await firebase.auth().signInWithEmailAndPassword( email, password )\n        .then(async ( value ) => {  // recebendo a response da promisse, pegando uid\n            let uid = value.user.uid;\n            \n            const userProflie = await firebase.firestore().collection( 'users' )\n                .doc( uid ).get()\n            \n            // utilizando valor da reposta do firebase armazenando em userProfile\n            let data = {\n                uid: uid,\n                nome: userProflie.data().nome,\n                avatarUrl: userProflie.data().avatarUrl,\n                email: value.user.email\n            }\n             // Passando para estado user atraves de setUser\n             setUser( data )\n             saveStorageUser( data )\n            setAuthLoading( false ) // cadastro finalizado\n            toast.success('Bem vindo ao sistema')\n        } )\n        .catch( ( erro ) => {\n            console.log( erro );\n            toast.error('Ops!, algo errado')\n            setAuthLoading( false )\n            \n        } )\n\n    }\n\n\n    // Deslogando do sistema\n    async function deslogarFirebase() {\n        await firebase.auth().signOut()\n        localStorage.removeItem( 'Sistema_User' )\n        setUser(null)\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            logado: !!user,\n            user,\n            loading,\n            casdastrarFireBase,\n            deslogarFirebase,\n            logar,\n            loadingAuth,\n            setUser,\n            saveStorageUser\n\n        }}>                         {/* !! esta convertendo o que estiver dentro do estado user em booleano*/}\n            \n            {children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}