{"ast":null,"code":"var _jsxFileName = \"/home/juan/Documentos/Front-End_Projetos-React.js/oficina/src/contexts/auth.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, createContext } from 'react';\nimport firebase from '../services/firebaseConnection'; // Criando um contexto para espalha informações para outros components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction AuthProvider({\n  children\n}) {\n  _s();\n\n  const [user, setUser] = useState(null); // começa pq não existe usuario\n\n  const [loadingAuth, setAuthLoading] = useState(false); // loading do login\n\n  const [loading, setLoading] = useState(true); //loading geral, quando abre a aplicação\n  //Montando a aplicação com usuario do local storage caso haja um\n\n  useEffect(() => {\n    function loadingStorage() {\n      const storageUser = localStorage.getItem('Sistema_User'); // vendo se há alguns usuario no localStorage\n\n      if (storageUser) {\n        setUser(JSON.parse(storageUser)); // se tiver algo, mandar para o estado setUser\n\n        setLoading(false);\n      }\n\n      setLoading(false);\n    }\n\n    loadingStorage();\n  }, []); // cadastro no firebase de usuario\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      logado: !!user,\n      user,\n      loading\n    },\n    children: [\" \", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"nAzZ5yLdCK2UQ7434zul/s7KcG4=\");\n\n_c = AuthProvider;\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/juan/Documentos/Front-End_Projetos-React.js/oficina/src/contexts/auth.js"],"names":["useState","useEffect","createContext","firebase","AuthContext","AuthProvider","children","user","setUser","loadingAuth","setAuthLoading","loading","setLoading","loadingStorage","storageUser","localStorage","getItem","JSON","parse","logado"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,gCAArB,C,CAEA;;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC,EAAD,CAAjC;;AAEP,SAASG,YAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAsC;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC,CADkC,CACK;;AACvC,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAE,KAAF,CAA9C,CAFkC,CAEsB;;AACxD,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC,CAHkC,CAGW;AAE7C;;AACAC,EAAAA,SAAS,CAAE,MAAM;AAEb,aAASY,cAAT,GAA0B;AACtB,YAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAsB,cAAtB,CAApB,CADsB,CAGtB;;AACA,UAAKF,WAAL,EAAmB;AACfN,QAAAA,OAAO,CAAES,IAAI,CAACC,KAAL,CAAYJ,WAAZ,CAAF,CAAP,CADe,CACsB;;AACrCF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACDA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAEFC,IAAAA,cAAc;AAEhB,GAfQ,EAeN,EAfM,CAAT,CANkC,CAuBlC;;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACM,MAAAA,MAAM,EAAE,CAAC,CAACZ,IAAX;AAAiBA,MAAAA,IAAjB;AAAuBI,MAAAA;AAAvB,KAA7B;AAAA,oBACKL,QADL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA9BQD,Y;;KAAAA,Y;AAgCT,eAAeA,YAAf","sourcesContent":["import { useState, useEffect, createContext } from 'react'\nimport firebase from '../services/firebaseConnection'\n\n// Criando um contexto para espalha informações para outros components\n\nexport const AuthContext = createContext({})\n\nfunction AuthProvider( { children } ) {\n    const [user, setUser] = useState(null) // começa pq não existe usuario\n    const [loadingAuth, setAuthLoading] = useState( false ) // loading do login\n    const [loading, setLoading] = useState(true) //loading geral, quando abre a aplicação\n    \n    //Montando a aplicação com usuario do local storage caso haja um\n    useEffect( () => {\n\n        function loadingStorage() {\n            const storageUser = localStorage.getItem( 'Sistema_User' ) \n        \n            // vendo se há alguns usuario no localStorage\n            if ( storageUser ) {\n                setUser( JSON.parse( storageUser ) ) // se tiver algo, mandar para o estado setUser\n                setLoading(false)\n            }\n            setLoading(false)\n        }\n\n       loadingStorage()\n\n    }, [] )\n    \n    // cadastro no firebase de usuario\n\n    return (\n        <AuthContext.Provider value={{logado: !!user, user, loading}}> {/* !! esta convertendo o que estiver dentro do estado user em booleano*/}\n            {children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}