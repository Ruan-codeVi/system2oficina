{"ast":null,"code":"var _jsxFileName = \"/home/juan/Documentos/Front-End_Projetos-React.js/oficina/src/contexts/auth.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, createContext } from 'react';\nimport firebase from '../services/firebaseConnection'; // Criando um contexto para espalha informações para outros components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction AuthProvider({\n  children\n}) {\n  _s();\n\n  const [user, setUser] = useState(null); // começa pq não existe usuario\n\n  const [loadingAuth, setAuthLoading] = useState(false); // loading do login\n\n  const [loading, setLoading] = useState(true); //loading geral, quando abre a aplicação\n  //Montando a aplicação com usuario do local storage caso haja um\n\n  useEffect(() => {\n    function loadingStorage() {\n      const storageUser = localStorage.getItem('Sistema_User'); // vendo se há alguns usuario no localStorage\n\n      if (storageUser) {\n        setUser(JSON.parse(storageUser)); // se tiver algo, mandar para o estado setUser\n\n        setLoading(false);\n      }\n\n      setLoading(false);\n    }\n\n    loadingStorage();\n  }, []); // cadastro no firebase de usuario\n\n  async function casdastrarFireBase(email, password, nome) {\n    setAuthLoading(true); // mudou pra true, pq tem alguem querendo cadastrar\n\n    await firebase.auth().createUserWithEmailAndPassword(email, password).then(async value => {\n      // caso de sucesso, recebe value com informações do usuario cadastrado\n      // transformando a função em assincrona para poder relacionar com o banco de dados do firebase\n      let uid = value.user.uid; // Indo no banco cadastrar\n\n      await firebase.firestore().collection('users').doc(uid) // falando criar um doc com a variavel que recebe o uid\n      .set({\n        // o que vai ser enviado para a coleção\n        nome: nome,\n        avatarUrl: null\n      })\n      /*Depois de cadastrar usuario, cadastrou no banco esse usuario,\n       agora é disponibilizar esse dados para estado de user    \n      */\n      .then(() => {\n        let data = {\n          uid: uid,\n          nome: nome,\n          email: value.user.email,\n          avatarUrl: null\n        }; // Passando para estado user atraves de setUser\n\n        setUser(data);\n        saveStorageUser(data);\n        setAuthLoading(false); // cadastro finalizado\n      });\n    }).catch(erro => {\n      console.log(erro);\n      setAuthLoading(false);\n    });\n  } // Salvar no localStorage esse usuario novo\n\n\n  function saveStorageUser(data) {\n    localStorage.setItem('Sistema_User', JSON.stringify(data));\n  } // deslogando\n\n\n  async function deslogarFirebase() {\n    await firebase.auth().signOut();\n    localStorage.removeItem('Sistema_User');\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      logado: !!user,\n      user,\n      loading,\n      casdastrarFireBase\n    },\n    children: [\"                         \", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"nAzZ5yLdCK2UQ7434zul/s7KcG4=\");\n\n_c = AuthProvider;\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/juan/Documentos/Front-End_Projetos-React.js/oficina/src/contexts/auth.js"],"names":["useState","useEffect","createContext","firebase","AuthContext","AuthProvider","children","user","setUser","loadingAuth","setAuthLoading","loading","setLoading","loadingStorage","storageUser","localStorage","getItem","JSON","parse","casdastrarFireBase","email","password","nome","auth","createUserWithEmailAndPassword","then","value","uid","firestore","collection","doc","set","avatarUrl","data","saveStorageUser","catch","erro","console","log","setItem","stringify","deslogarFirebase","signOut","removeItem","logado"],"mappings":"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","sourcesContent":["import { useState, useEffect, createContext } from 'react'\nimport firebase from '../services/firebaseConnection'\n\n// Criando um contexto para espalha informações para outros components\n\nexport const AuthContext = createContext({})\n\nfunction AuthProvider( { children } ) {\n    const [user, setUser] = useState(null) // começa pq não existe usuario\n    const [loadingAuth, setAuthLoading] = useState( false ) // loading do login\n    const [loading, setLoading] = useState(true) //loading geral, quando abre a aplicação\n    \n    //Montando a aplicação com usuario do local storage caso haja um\n    useEffect( () => {\n\n        function loadingStorage() {\n            const storageUser = localStorage.getItem( 'Sistema_User' ) \n        \n            // vendo se há alguns usuario no localStorage\n            if ( storageUser ) {\n                setUser( JSON.parse( storageUser ) ) // se tiver algo, mandar para o estado setUser\n                setLoading(false)\n            }\n            setLoading(false)\n        }\n\n       loadingStorage()\n\n    }, [] )\n    \n    // cadastro no firebase de usuario\n    async function casdastrarFireBase(email, password, nome) {\n        setAuthLoading( true ) // mudou pra true, pq tem alguem querendo cadastrar\n        \n        await firebase.auth().createUserWithEmailAndPassword( email, password)\n        .then(async ( value ) => { // caso de sucesso, recebe value com informações do usuario cadastrado\n           // transformando a função em assincrona para poder relacionar com o banco de dados do firebase\n            let uid = value.user.uid\n\n            // Indo no banco cadastrar\n            await firebase.firestore().collection( 'users' )\n            .doc( uid ) // falando criar um doc com a variavel que recebe o uid\n            .set( { // o que vai ser enviado para a coleção\n                nome: nome,\n                avatarUrl: null\n            } )\n            /*Depois de cadastrar usuario, cadastrou no banco esse usuario,\n             agora é disponibilizar esse dados para estado de user    \n            */\n            .then( () => {\n                let data = {\n                    uid: uid,\n                    nome: nome,\n                    email: value.user.email,\n                    avatarUrl: null   \n                }\n                 // Passando para estado user atraves de setUser\n                setUser( data )\n                saveStorageUser( data )\n                setAuthLoading(false) // cadastro finalizado\n            } )\n\n        } )\n            .catch( erro => {\n                console.log( erro )\n                setAuthLoading(false)\n            } )\n    }\n\n    // Salvar no localStorage esse usuario novo\n    function saveStorageUser( data ) {\n        localStorage.setItem('Sistema_User', JSON.stringify(data))\n    }\n    // deslogando\n    async function deslogarFirebase() {\n        await firebase.auth().signOut()\n        localStorage.removeItem('Sistema_User')\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            logado: !!user,\n            user,\n            loading,\n            casdastrarFireBase\n        }}>                         {/* !! esta convertendo o que estiver dentro do estado user em booleano*/}\n            \n            {children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}